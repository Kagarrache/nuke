#! C:/Program Files/Nuke8.0v4/nuke-8.0.v4.dll -nx
version 8.0 v4
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="-4" y="-4" w="1928" h="1180" screen="0">
        <splitter orientation="1">
            <split size="1214"/>
            <splitter orientation="1">
                <split size="46"/>
                <dock id="" hideTitles="1" activePageId="Toolbar.1">
                    <page id="Toolbar.1"/>
                </dock>
                <split size="1164"/>
                <splitter orientation="2">
                    <split size="661"/>
                    <dock id="" activePageId="Viewer.1">
                        <page id="Viewer.1"/>
                    </dock>
                    <split size="465"/>
                    <dock id="" activePageId="DAG.1">
                        <page id="DAG.1"/>
                        <page id="Curve Editor.1"/>
                        <page id="DopeSheet.1"/>
                    </dock>
                </splitter>
            </splitter>
            <split size="702"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name D:/NukeStuff/ParticleLights_v1.1.nk
 frame 41
 last_frame 200
 format "1280 720 0 0 1280 720 1 720p"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x274427ff
 label 3d
 note_font_size 42
 xpos -359
 ypos 480
 bdwidth 275
 bdheight 244
}
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x3d426dff
 label EXAMPELS
 note_font "Verdana Bold Bold"
 note_font_size 100
 xpos -1318
 ypos 158
 bdwidth 2340
 bdheight 1258
}
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x388e8e00
 label "THE MAIN NODE"
 note_font "Verdana Bold Bold"
 note_font_size 100
 xpos -2252
 ypos 157
 bdwidth 869
 bdheight 293
}
StickyNote {
 inputs 0
 name StickyNote1
 tile_color 0x59a05dff
 label "   02: SINGLE LIGHTS   "
 note_font_size 50
 xpos 243
 ypos 434
}
StickyNote {
 inputs 0
 name StickyNote3
 tile_color 0x59a05dff
 label "   01: BASIC PARTICLES  "
 note_font_size 50
 xpos -1180
 ypos 441
}
StickyNote {
 inputs 0
 name StickyNote4
 tile_color 0x417544ff
 label "          This is the basic particle light in action.           "
 note_font_size 25
 xpos -1189
 ypos 513
}
StickyNote {
 inputs 0
 name StickyNote2
 tile_color 0x417544ff
 label "             In this example we use single particles as             \n   light sources, just like the regular Light node\n   This also shows the half-lambert light \n    that makes a softer fake light\n"
 note_font_size 25
 xpos 238
 ypos 506
}
Axis2 {
 inputs 0
 rotate {0 {-6+(frame/4)} 0}
 name Axis2
 xpos -194
 ypos 536
}
Camera2 {
 translate {11.15517521 -5.764003277 24.37641335}
 rotate {17.72198681 20.00005064 0}
 focal 36
 name Camera1
 xpos -194
 ypos 602
}
Dot {
 name Dot6
 xpos -170
 ypos 697
}
Dot {
 name Dot10
 xpos -170
 ypos 872
}
set Neceb500 [stack 0]
Group {
 inputs 0
 name RandomGeo
 xpos -339
 ypos 698
}
 Sphere {
  inputs 0
  translate {6.159999847 0 0}
  name Sphere3
  xpos 462
  ypos 192
 }
 Cube {
  inputs 0
  rotate {45 45 0}
  name Cube1
  xpos 369
  ypos 199
 }
 Sphere {
  inputs 0
  translate {-6.099999905 0 0}
  name Sphere2
  xpos 279
  ypos 198
 }
 Scene {
  inputs 3
  name Scene1
  xpos 379
  ypos 233
 }
set Ne4bb610 [stack 0]
push $Ne4bb610
 TransformGeo {
  translate {0 5.079999924 0}
  name TransformGeo1
  xpos 369
  ypos 334
 }
 Scene {
  inputs 2
  name Scene2
  xpos 479
  ypos 313
 }
set Ned7e8b0 [stack 0]
 TransformGeo {
  translate {0 0 -7.900000095}
  name TransformGeo2
  xpos 575
  ypos 334
 }
push $Ned7e8b0
 Scene {
  inputs 2
  name Scene3
  xpos 585
  ypos 382
 }
set Ne4bbcf0 [stack 0]
push $Ne4bbcf0
 Scene {
  inputs 2
  name Scene4
  xpos 583
  ypos 458
 }
 Output {
  name Output1
  xpos 575
  ypos 555
 }
end_group
Dot {
 name Dot8
 xpos -229
 ypos 701
}
Dot {
 name Dot9
 xpos -229
 ypos 827
}
set Nc187dd0 [stack 0]
Axis2 {
 inputs 0
 translate {0 2 0}
 rotate {{frame*4} {frame*8} {frame*12}}
 name Axis3
 xpos -1070
 ypos 599
}
Sphere {
 inputs 0
 translate {4 2 0}
 uniform_scale 0.4
 name Sphere1
 xpos -998
 ypos 596
}
TransformGeo {
 inputs 2
 name TransformGeo1
 xpos -998
 ypos 620
}
push 0
ParticleEmitter {
 inputs 2
 rate 2
 lifetime 30
 velocity 0.017
 size 0.05
 size_variation 1
 name ParticleEmitter1
 xpos -888
 ypos 620
}
ParticleTurbulence {
 strength {0.01 {strength.x} {strength.x}}
 scale {0.5 {scale.x} {scale.x}}
 name ParticleTurbulence1
 xpos -888
 ypos 644
}
ParticleDrag {
 drag 0.4
 name ParticleDrag1
 xpos -888
 ypos 680
}
ParticleExpression {
 colexpr sin(pos)
 name ParticleExpression1
 xpos -888
 ypos 716
}
ParticleCurve {
 curves {r {}
   g {}
   b {}
   a {}
   size {curve 0.1251244545 -0.003482580185}
   mass {}}
 affect_rgb false
 affect_alpha false
 affect_size true
 name ParticleCurve1
 xpos -888
 ypos 752
}
set Nedd8ac0 [stack 0]
Scene {
 inputs 2
 name Scene1
 xpos -989
 ypos 803
}
push 0
ScanlineRender {
 inputs 3
 motion_vectors_type distance
 name ScanlineRender1
 xpos -993
 ypos 869
}
push $Nc187dd0
Dot {
 name Dot13
 xpos -229
 ypos 1047
}
set Nedda2d0 [stack 0]
push $Neceb500
Dot {
 name Dot12
 xpos -170
 ypos 1100
}
set Nedda640 [stack 0]
push $Nedd8ac0
Group {
 inputs 3
 name Particle_Lights3
 xpos -888
 ypos 1097
 addUserKnob {20 User}
 addUserKnob {26 info1 l "" +STARTLINE T "Particle Lights v1.1"}
 addUserKnob {26 info2 l "" +STARTLINE T "by Mads Hagbarth Lund"}
 addUserKnob {26 ""}
 addUserKnob {41 "blinnShader_Diffuse Multiplier" l "Diffuse Multiplier" T "BlinkScript8.blinnShader_Diffuse Multiplier"}
 addUserKnob {41 "blinnShader_Specular Power" l "Specular Power" T "BlinkScript8.blinnShader_Specular Power"}
 addUserKnob {41 "blinnShader_Specular Hardness" l "Specular Hardness" T "BlinkScript8.blinnShader_Specular Hardness"}
 addUserKnob {41 "blinnShader_Half Lambert" l "Half Lambert" T "BlinkScript8.blinnShader_Half Lambert"}
}
 StickyNote {
  inputs 0
  name StickyNote1
  label "A bug in the blink node means that the input size must be atleast 2x2. \nSo we fake this by adding 2 null particles."
  xpos -847
  ypos 354
 }
 Group {
  inputs 0
  name Light2
  xpos -679
  ypos 487
  addUserKnob {20 User}
  addUserKnob {41 color T Point.color}
  addUserKnob {41 intensity T Point.intensity}
  addUserKnob {41 translate T Point.translate}
 }
  StickyNote {
   inputs 0
   name StickyNote1
   label "Ensure that we can use axis nodes\nto modify the position of the light."
   xpos -183
   ypos -299
  }
  StickyNote {
   inputs 0
   name StickyNote2
   label "Dummy object to make it look like a regular light"
   xpos -188
   ypos -235
  }
  StickyNote {
   inputs 0
   name StickyNote4
   label "Link positions via the world matrix to get exact position"
   xpos -300
   ypos -55
  }
  StickyNote {
   inputs 0
   name StickyNote3
   label "Link RGB to color and Alpha to Intensity"
   xpos -300
   ypos -131
  }
  Constant {
   inputs 0
   color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
   format "1 1 0 0 1 1 1 hg_light"
   name Constant2
   xpos -399
   ypos -148
  }
  Sphere {
   display off
   render_mode off
   rows 1
   columns 1
   translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
   uniform_scale 0.022
   name Lightx
   xpos -399
   ypos -52
  }
push 0
  ParticleEmitter {
   inputs 2
   display off
   render_mode off
   start_frame -5
   emit_channels {b}
   emit_from bbox
   emit_order uniformly
   randomize_type "randomize outwards"
   rate 4
   lifetime 1
   velocity 0
   size 1
   size_channel rgba.alpha
   color_from_texture true
   name ParticleEmitter1
   selected true
   xpos -399
   ypos 46
  }
  Output {
   name Output1
   xpos -399
   ypos 150
  }
  Input {
   inputs 0
   name Input1
   xpos -276
   ypos -296
  }
  Light {
   color {0 0 0}
   intensity 0
   depthmap_slope_bias 0.01
   name Point
   xpos -266
   ypos -216
  }
 end_group
 Group {
  inputs 0
  name Light1
  xpos -684
  ypos 428
  addUserKnob {20 User}
  addUserKnob {41 color T Point.color}
  addUserKnob {41 intensity T Point.intensity}
  addUserKnob {41 translate T Point.translate}
 }
  StickyNote {
   inputs 0
   name StickyNote1
   label "Ensure that we can use axis nodes\nto modify the position of the light."
   xpos -183
   ypos -299
  }
  StickyNote {
   inputs 0
   name StickyNote2
   label "Dummy object to make it look like a regular light"
   xpos -188
   ypos -235
  }
  StickyNote {
   inputs 0
   name StickyNote4
   label "Link positions via the world matrix to get exact position"
   xpos -300
   ypos -55
  }
  StickyNote {
   inputs 0
   name StickyNote3
   label "Link RGB to color and Alpha to Intensity"
   xpos -300
   ypos -131
  }
  Constant {
   inputs 0
   color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
   format "1 1 0 0 1 1 1 hg_light"
   name Constant2
   xpos -399
   ypos -148
  }
  Sphere {
   display off
   render_mode off
   rows 1
   columns 1
   translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
   uniform_scale 0.022
   name Lightx
   xpos -399
   ypos -52
  }
push 0
  ParticleEmitter {
   inputs 2
   display off
   render_mode off
   start_frame -5
   emit_channels {b}
   emit_from bbox
   emit_order uniformly
   randomize_type "randomize outwards"
   rate 4
   lifetime 1
   velocity 0
   size 1
   size_channel rgba.alpha
   color_from_texture true
   name ParticleEmitter1
   selected true
   xpos -399
   ypos 46
  }
  Output {
   name Output1
   xpos -399
   ypos 150
  }
  Input {
   inputs 0
   name Input1
   xpos -276
   ypos -296
  }
  Light {
   color {0 0 0}
   intensity 0
   depthmap_slope_bias 0.01
   name Point
   xpos -266
   ypos -216
  }
 end_group
push 0
 Input {
  inputs 0
  name Particles
  xpos -452
  ypos 324
 }
 ParticleMerge {
  inputs 4
  name ParticleMerge1
  xpos -452
  ypos 428
 }
add_layer {hag_pos hag_pos.red hag_pos.green hag_pos.blue hag_pos.alpha}
add_layer {hag_active hag_active.a}
 ParticleToImage {
  pos hag_pos
  active hag_active.a
  name ParticleToImage1
  xpos -452
  ypos 511
 }
set N6e66d290 [stack 0]
 Shuffle {
  in hag_pos
  name light_pos
  xpos -329
  ypos 511
 }
 Dot {
  name Dot2
  xpos -295
  ypos 559
 }
push $N6e66d290
 Shuffle {
  in rgb
  in2 hag_active
  alpha red2
  name light_color
  xpos -452
  ypos 581
 }
 Input {
  inputs 0
  name Camera
  xpos -149
  ypos 282
  number 1
 }
 Camera2 {
  name Camera1
  xpos -136
  ypos 320
 }
 Dot {
  name Dot1
  xpos -112
  ypos 396
 }
 Input {
  inputs 0
  name Scene3D
  xpos -275
  ypos 323
  number 2
 }
push 0
add_layer {point point.red point.green point.blue point.alpha}
add_layer {normal normal.red normal.green normal.blue normal.alpha}
 ScanlineRender {
  inputs 3
  max_tessellation 2
  motion_vectors_type distance
  output_shader_vectors true
  P_channel point
  N_channel normal
  name ScanlineRender2
  xpos -275
  ypos 393
 }
 Dot {
  name Dot10
  xpos -241
  ypos 421
 }
set N6dcaaa60 [stack 0]
 Dot {
  name Dot3
  xpos -152
  ypos 421
 }
 Shuffle {
  in normal
  in2 rgba
  alpha alpha2
  name NormalSplit
  xpos -186
  ypos 472
 }
push $N6dcaaa60
 Shuffle {
  in point
  in2 rgba
  alpha alpha2
  name PointPosSplit
  xpos -275
  ypos 472
 }
 BlinkScript {
  inputs 4
  ProgramGroup 1
  KernelDescription "1 \"blinnShader\" iterate pixelWise 4b6604ba5b4299095f03f9edf77da6dbf1f946c319dc7f6e6962ca67a375f9f8 5 \"pointPos\" Read Point \"normal\" Read Point \"light_color\" Read Random \"light_pos\" Read Random \"dst\" Write Point 5 \"Camera Position\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"Diffuse Multiplier\" Float 1 AACAPw== \"Specular Power\" Float 1 AAAgQQ== \"Specular Hardness\" Float 1 AADIQg== \"Half Lambert\" Bool 1 AQ=="
  kernelSource "kernel blinnShader : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> pointPos;  //the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> normal;  //the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> light_color;  //the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> light_pos;  //the input image\n\n  Image<eWrite> dst;  //the output image\n\n  param:\n    float3 cameraPosition;\n    float diffuseMultiplier;\n    float specularPower;\n    float specularHardness;\n    bool halfLambert;\n\n  local:\n    float3 lightDir;\n    float3 viewDir;\n\n  void define() \{\n    defineParam(halfLambert,\"Half Lambert\",bool(1));\n    defineParam(cameraPosition, \"Camera Position\", float3(1.0f,1.0f,1.0f));\n    defineParam(diffuseMultiplier,\"Diffuse Multiplier\",float(1.0f));\n    defineParam(specularPower,\"Specular Power\",float(10.0f));\n    defineParam(specularHardness,\"Specular Hardness\",float(100.0f));\n  \}\n\n  void init() \{\n  \}\n\n  void process() \{\n\n    SampleType(dst) sampleBase(0.0f);\n\n    float newVal = 0;\n    for(int j = 0; j < light_pos.bounds.y2; j++) \{\n      for(int i = 0; i < light_pos.bounds.x2; i++) \{\n        if (light_color(i,j).w == 1) \{        \n\n        lightDir = (float3(light_pos(i,j).x,light_pos(i,j).y,light_pos(i,j).z)-float3(pointPos(0),pointPos(1),pointPos(2)));\n        float distance = length(lightDir);\n        lightDir = normalize(lightDir);\n        distance = distance * distance;\n\n        viewDir = (cameraPosition-float3(pointPos(0),pointPos(1),pointPos(2)));\n        viewDir = normalize(viewDir);\n\n\n        //Calculating Diffuse\n        float NdotL = dot(float3(normal(0),normal(1),normal(2)),lightDir);\n        if (halfLambert) \{      \n           NdotL = NdotL * 0.5 + 0.5; //Added option for half lambert\n         \}\n        else\n        \{\n        NdotL = min(1.0f,max(0.0f,NdotL));\n        \}\n\n        float diffuse = NdotL * (light_pos(i,j).w*diffuseMultiplier) / distance;\n\n\n        //Calculating Specular\n        float3 H = normalize(lightDir+viewDir);\n        float NdotH = dot(float3(normal(0),normal(1),normal(2)),H);\n        float intensity = pow(NdotH,specularHardness);\n        float specular = intensity * specularPower / distance;\n\n\n        SampleType(dst) sample(0.0f);\n        sample.x = max(0.0f,(diffuse+specular) * light_color(i,j).x);\n        sample.y =  max(0.0f,(diffuse+specular) * light_color(i,j).y);\n        sample.z =  max(0.0f, (diffuse+specular) * light_color(i,j).z);\n        sampleBase += sample;\n        \}\n      \}\n    \}\n\n    dst() = sampleBase+float4(0,0,0,pointPos(3)); //Reaplying Alpha\n   \}\n\};"
  useGPUIfAvailable false
  vectorize false
  rebuild ""
  "blinnShader_Camera Position" {{parent.Camera1.world_matrix.3} {parent.Camera1.world_matrix.7} {parent.Camera1.world_matrix.11}}
  "blinnShader_Diffuse Multiplier" 4
  "blinnShader_Specular Power" 0.45
  "blinnShader_Specular Hardness" 200
  "blinnShader_Half Lambert" false
  name BlinkScript8
  selected true
  xpos -186
  ypos 575
 }
set N6dcab820 [stack 0]
 Premult {
  name Premult1
  xpos -186
  ypos 718
 }
 Output {
  name Output1
  xpos -186
  ypos 785
 }
push $N6dcab820
 Viewer {
  colour_sample_bbox {-0.8265625238 -0.2890625 -0.8249999881 -0.287499994}
  samplepoints {{-0.8265625238 -0.2890625}
    }
  input_process false
  name Viewer1
  xpos -3
  ypos 589
 }
end_group
Merge2 {
 inputs 2
 operation plus
 name Merge1
 xpos -985
 ypos 1105
}
PostageStamp {
 name PostageStamp2
 xpos -993
 ypos 1228
 postage_stamp true
}
push $Nedda2d0
push $Nedda640
Axis2 {
 inputs 0
 translate {0.3803196549 1.175070047 -5.005373955}
 rotate {{frame} {frame*2} {frame/4}}
 name Axis1
 xpos 523
 ypos 786
}
set Nf045490 [stack 0]
Group {
 name Light1
 xpos 421
 ypos 904
 addUserKnob {20 User}
 addUserKnob {41 color T Point.color}
 addUserKnob {41 intensity T Point.intensity}
 addUserKnob {41 translate T Point.translate}
}
 StickyNote {
  inputs 0
  name StickyNote1
  label "Ensure that we can use axis nodes\nto modify the position of the light."
  xpos -183
  ypos -299
 }
 StickyNote {
  inputs 0
  name StickyNote2
  label "Dummy object to make it look like a regular light"
  xpos -188
  ypos -235
 }
 StickyNote {
  inputs 0
  name StickyNote4
  label "Link positions via the world matrix to get exact position"
  xpos -300
  ypos -55
 }
 StickyNote {
  inputs 0
  name StickyNote3
  label "Link RGB to color and Alpha to Intensity"
  xpos -300
  ypos -131
 }
 Input {
  inputs 0
  name Input1
  xpos -276
  ypos -296
 }
 Light {
  color {0.24 0.805 0.235}
  color_panelDropped true
  intensity 8.8
  translate {-8 1 3}
  depthmap_slope_bias 0.01
  name Point
  xpos -266
  ypos -216
 }
 Constant {
  inputs 0
  color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
  format "1 1 0 0 1 1 1 hg_light"
  name Constant2
  selected true
  xpos -399
  ypos -148
 }
 Sphere {
  display off
  render_mode off
  rows 1
  columns 1
  translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
  uniform_scale 0.022
  name Lightx
  xpos -399
  ypos -52
 }
push 0
 ParticleEmitter {
  inputs 2
  display off
  render_mode off
  emit_channels {b}
  emit_from bbox
  emit_order uniformly
  randomize_type "randomize outwards"
  rate 1
  lifetime 1
  velocity 0
  size 1
  size_channel rgba.alpha
  color_from_texture true
  name ParticleEmitter1
  xpos -399
  ypos 48
 }
 Output {
  name Output1
  xpos -399
  ypos 150
 }
end_group
push $Nf045490
Group {
 name Light2
 xpos 513
 ypos 903
 addUserKnob {20 User}
 addUserKnob {41 color T Point.color}
 addUserKnob {41 intensity T Point.intensity}
 addUserKnob {41 translate T Point.translate}
}
 StickyNote {
  inputs 0
  name StickyNote1
  label "Ensure that we can use axis nodes\nto modify the position of the light."
  xpos -183
  ypos -299
 }
 StickyNote {
  inputs 0
  name StickyNote2
  label "Dummy object to make it look like a regular light"
  xpos -188
  ypos -235
 }
 StickyNote {
  inputs 0
  name StickyNote4
  label "Link positions via the world matrix to get exact position"
  xpos -300
  ypos -55
 }
 StickyNote {
  inputs 0
  name StickyNote3
  label "Link RGB to color and Alpha to Intensity"
  xpos -300
  ypos -131
 }
 Input {
  inputs 0
  name Input1
  xpos -276
  ypos -296
 }
 Light {
  color {0.235 0.235 0.54}
  color_panelDropped true
  intensity 10
  translate {0 -8 3}
  depthmap_slope_bias 0.01
  name Point
  xpos -266
  ypos -216
 }
 Constant {
  inputs 0
  color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
  format "1 1 0 0 1 1 1 hg_light"
  name Constant2
  selected true
  xpos -399
  ypos -148
 }
 Sphere {
  display off
  render_mode off
  rows 1
  columns 1
  translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
  uniform_scale 0.022
  name Lightx
  xpos -399
  ypos -52
 }
push 0
 ParticleEmitter {
  inputs 2
  display off
  render_mode off
  emit_channels {b}
  emit_from bbox
  emit_order uniformly
  randomize_type "randomize outwards"
  rate 1
  lifetime 1
  velocity 0
  size 1
  size_channel rgba.alpha
  color_from_texture true
  name ParticleEmitter1
  xpos -399
  ypos 48
 }
 Output {
  name Output1
  xpos -399
  ypos 150
 }
end_group
push $Nf045490
Group {
 name Light
 xpos 607
 ypos 903
 addUserKnob {20 User}
 addUserKnob {41 color T Point.color}
 addUserKnob {41 intensity T Point.intensity}
 addUserKnob {41 translate T Point.translate}
}
 StickyNote {
  inputs 0
  name StickyNote1
  label "Ensure that we can use axis nodes\nto modify the position of the light."
  xpos -183
  ypos -299
 }
 StickyNote {
  inputs 0
  name StickyNote2
  label "Dummy object to make it look like a regular light"
  xpos -188
  ypos -235
 }
 StickyNote {
  inputs 0
  name StickyNote4
  label "Link positions via the world matrix to get exact position"
  xpos -300
  ypos -55
 }
 StickyNote {
  inputs 0
  name StickyNote3
  label "Link RGB to color and Alpha to Intensity"
  xpos -300
  ypos -131
 }
 Constant {
  inputs 0
  color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
  format "1 1 0 0 1 1 1 hg_light"
  name Constant2
  xpos -399
  ypos -148
 }
 Sphere {
  display off
  render_mode off
  rows 1
  columns 1
  translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
  uniform_scale 0.022
  name Lightx
  xpos -399
  ypos -52
 }
push 0
 ParticleEmitter {
  inputs 2
  display off
  render_mode off
  emit_channels {b}
  emit_from bbox
  emit_order uniformly
  randomize_type "randomize outwards"
  rate 1
  lifetime 1
  velocity 0
  size 1
  size_channel rgba.alpha
  color_from_texture true
  name ParticleEmitter1
  xpos -399
  ypos 48
 }
 Output {
  name Output1
  xpos -399
  ypos 150
 }
 Input {
  inputs 0
  name Input1
  xpos -276
  ypos -296
 }
 Light {
  color {0.85 0.235 0.235}
  intensity 10
  translate {5 2 15}
  depthmap_slope_bias 0.01
  name Point
  selected true
  xpos -266
  ypos -216
 }
end_group
ParticleMerge {
 inputs 3
 name ParticleMerge1
 xpos 513
 ypos 1001
}
Group {
 inputs 3
 name Particle_Lights1
 xpos 513
 ypos 1087
 addUserKnob {20 User}
 addUserKnob {26 info1 l "" +STARTLINE T "Particle Lights v1.1"}
 addUserKnob {26 info2 l "" +STARTLINE T "by Mads Hagbarth Lund"}
 addUserKnob {26 ""}
 addUserKnob {41 "blinnShader_Diffuse Multiplier" l "Diffuse Multiplier" T "BlinkScript8.blinnShader_Diffuse Multiplier"}
 addUserKnob {41 "blinnShader_Specular Power" l "Specular Power" T "BlinkScript8.blinnShader_Specular Power"}
 addUserKnob {41 "blinnShader_Specular Hardness" l "Specular Hardness" T "BlinkScript8.blinnShader_Specular Hardness"}
 addUserKnob {41 "blinnShader_Half Lambert" l "Half Lambert" T "BlinkScript8.blinnShader_Half Lambert"}
}
 StickyNote {
  inputs 0
  name StickyNote1
  label "A bug in the blink node means that the input size must be atleast 2x2. \nSo we fake this by adding 2 null particles."
  xpos -847
  ypos 354
 }
 Group {
  inputs 0
  name Light2
  xpos -679
  ypos 487
  addUserKnob {20 User}
  addUserKnob {41 color T Point.color}
  addUserKnob {41 intensity T Point.intensity}
  addUserKnob {41 translate T Point.translate}
 }
  StickyNote {
   inputs 0
   name StickyNote1
   label "Ensure that we can use axis nodes\nto modify the position of the light."
   xpos -183
   ypos -299
  }
  StickyNote {
   inputs 0
   name StickyNote2
   label "Dummy object to make it look like a regular light"
   xpos -188
   ypos -235
  }
  StickyNote {
   inputs 0
   name StickyNote4
   label "Link positions via the world matrix to get exact position"
   xpos -300
   ypos -55
  }
  StickyNote {
   inputs 0
   name StickyNote3
   label "Link RGB to color and Alpha to Intensity"
   xpos -300
   ypos -131
  }
  Constant {
   inputs 0
   color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
   format "1 1 0 0 1 1 1 hg_light"
   name Constant2
   xpos -399
   ypos -148
  }
  Sphere {
   display off
   render_mode off
   rows 1
   columns 1
   translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
   uniform_scale 0.022
   name Lightx
   xpos -399
   ypos -52
  }
push 0
  ParticleEmitter {
   inputs 2
   display off
   render_mode off
   start_frame -5
   emit_channels {b}
   emit_from bbox
   emit_order uniformly
   randomize_type "randomize outwards"
   rate 4
   lifetime 1
   velocity 0
   size 1
   size_channel rgba.alpha
   color_from_texture true
   name ParticleEmitter1
   selected true
   xpos -399
   ypos 46
  }
  Output {
   name Output1
   xpos -399
   ypos 150
  }
  Input {
   inputs 0
   name Input1
   xpos -276
   ypos -296
  }
  Light {
   color {0 0 0}
   intensity 0
   depthmap_slope_bias 0.01
   name Point
   xpos -266
   ypos -216
  }
 end_group
 Group {
  inputs 0
  name Light1
  xpos -684
  ypos 428
  addUserKnob {20 User}
  addUserKnob {41 color T Point.color}
  addUserKnob {41 intensity T Point.intensity}
  addUserKnob {41 translate T Point.translate}
 }
  StickyNote {
   inputs 0
   name StickyNote1
   label "Ensure that we can use axis nodes\nto modify the position of the light."
   xpos -183
   ypos -299
  }
  StickyNote {
   inputs 0
   name StickyNote2
   label "Dummy object to make it look like a regular light"
   xpos -188
   ypos -235
  }
  StickyNote {
   inputs 0
   name StickyNote4
   label "Link positions via the world matrix to get exact position"
   xpos -300
   ypos -55
  }
  StickyNote {
   inputs 0
   name StickyNote3
   label "Link RGB to color and Alpha to Intensity"
   xpos -300
   ypos -131
  }
  Constant {
   inputs 0
   color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
   format "1 1 0 0 1 1 1 hg_light"
   name Constant2
   xpos -399
   ypos -148
  }
  Sphere {
   display off
   render_mode off
   rows 1
   columns 1
   translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
   uniform_scale 0.022
   name Lightx
   xpos -399
   ypos -52
  }
push 0
  ParticleEmitter {
   inputs 2
   display off
   render_mode off
   start_frame -5
   emit_channels {b}
   emit_from bbox
   emit_order uniformly
   randomize_type "randomize outwards"
   rate 4
   lifetime 1
   velocity 0
   size 1
   size_channel rgba.alpha
   color_from_texture true
   name ParticleEmitter1
   selected true
   xpos -399
   ypos 46
  }
  Output {
   name Output1
   xpos -399
   ypos 150
  }
  Input {
   inputs 0
   name Input1
   xpos -276
   ypos -296
  }
  Light {
   color {0 0 0}
   intensity 0
   depthmap_slope_bias 0.01
   name Point
   xpos -266
   ypos -216
  }
 end_group
push 0
 Input {
  inputs 0
  name Particles
  xpos -452
  ypos 324
 }
 ParticleMerge {
  inputs 4
  name ParticleMerge1
  xpos -452
  ypos 428
 }
 ParticleToImage {
  pos hag_pos
  active hag_active.a
  name ParticleToImage1
  xpos -452
  ypos 511
 }
set N190cdc10 [stack 0]
 Shuffle {
  in hag_pos
  name light_pos
  xpos -329
  ypos 511
 }
 Dot {
  name Dot2
  xpos -295
  ypos 559
 }
push $N190cdc10
 Shuffle {
  in rgb
  in2 hag_active
  alpha red2
  name light_color
  xpos -452
  ypos 581
 }
 Input {
  inputs 0
  name Camera
  xpos -149
  ypos 282
  number 1
 }
 Camera2 {
  name Camera1
  xpos -136
  ypos 320
 }
 Dot {
  name Dot1
  xpos -112
  ypos 396
 }
 Input {
  inputs 0
  name Scene3D
  xpos -275
  ypos 323
  number 2
 }
push 0
 ScanlineRender {
  inputs 3
  max_tessellation 2
  motion_vectors_type distance
  output_shader_vectors true
  P_channel point
  N_channel normal
  name ScanlineRender2
  xpos -275
  ypos 393
 }
 Dot {
  name Dot10
  xpos -241
  ypos 421
 }
set N190cf790 [stack 0]
 Dot {
  name Dot3
  xpos -152
  ypos 421
 }
 Shuffle {
  in normal
  in2 rgba
  alpha alpha2
  name NormalSplit
  xpos -186
  ypos 472
 }
push $N190cf790
 Shuffle {
  in point
  in2 rgba
  alpha alpha2
  name PointPosSplit
  xpos -275
  ypos 472
 }
 BlinkScript {
  inputs 4
  ProgramGroup 1
  KernelDescription "1 \"blinnShader\" iterate pixelWise 4b6604ba5b4299095f03f9edf77da6dbf1f946c319dc7f6e6962ca67a375f9f8 5 \"pointPos\" Read Point \"normal\" Read Point \"light_color\" Read Random \"light_pos\" Read Random \"dst\" Write Point 5 \"Camera Position\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"Diffuse Multiplier\" Float 1 AACAPw== \"Specular Power\" Float 1 AAAgQQ== \"Specular Hardness\" Float 1 AADIQg== \"Half Lambert\" Bool 1 AQ=="
  kernelSource "kernel blinnShader : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> pointPos;  //the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> normal;  //the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> light_color;  //the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> light_pos;  //the input image\n\n  Image<eWrite> dst;  //the output image\n\n  param:\n    float3 cameraPosition;\n    float diffuseMultiplier;\n    float specularPower;\n    float specularHardness;\n    bool halfLambert;\n\n  local:\n    float3 lightDir;\n    float3 viewDir;\n\n  void define() \{\n    defineParam(halfLambert,\"Half Lambert\",bool(1));\n    defineParam(cameraPosition, \"Camera Position\", float3(1.0f,1.0f,1.0f));\n    defineParam(diffuseMultiplier,\"Diffuse Multiplier\",float(1.0f));\n    defineParam(specularPower,\"Specular Power\",float(10.0f));\n    defineParam(specularHardness,\"Specular Hardness\",float(100.0f));\n  \}\n\n  void init() \{\n  \}\n\n  void process() \{\n\n    SampleType(dst) sampleBase(0.0f);\n\n    float newVal = 0;\n    for(int j = 0; j < light_pos.bounds.y2; j++) \{\n      for(int i = 0; i < light_pos.bounds.x2; i++) \{\n        if (light_color(i,j).w == 1) \{        \n\n        lightDir = (float3(light_pos(i,j).x,light_pos(i,j).y,light_pos(i,j).z)-float3(pointPos(0),pointPos(1),pointPos(2)));\n        float distance = length(lightDir);\n        lightDir = normalize(lightDir);\n        distance = distance * distance;\n\n        viewDir = (cameraPosition-float3(pointPos(0),pointPos(1),pointPos(2)));\n        viewDir = normalize(viewDir);\n\n\n        //Calculating Diffuse\n        float NdotL = dot(float3(normal(0),normal(1),normal(2)),lightDir);\n        if (halfLambert) \{      \n           NdotL = NdotL * 0.5 + 0.5; //Added option for half lambert\n         \}\n        else\n        \{\n        NdotL = min(1.0f,max(0.0f,NdotL));\n        \}\n\n        float diffuse = NdotL * (light_pos(i,j).w*diffuseMultiplier) / distance;\n\n\n        //Calculating Specular\n        float3 H = normalize(lightDir+viewDir);\n        float NdotH = dot(float3(normal(0),normal(1),normal(2)),H);\n        float intensity = pow(NdotH,specularHardness);\n        float specular = intensity * specularPower / distance;\n\n\n        SampleType(dst) sample(0.0f);\n        sample.x = max(0.0f,(diffuse+specular) * light_color(i,j).x);\n        sample.y =  max(0.0f,(diffuse+specular) * light_color(i,j).y);\n        sample.z =  max(0.0f, (diffuse+specular) * light_color(i,j).z);\n        sampleBase += sample;\n        \}\n      \}\n    \}\n\n    dst() = sampleBase+float4(0,0,0,pointPos(3)); //Reaplying Alpha\n   \}\n\};"
  useGPUIfAvailable false
  vectorize false
  rebuild ""
  "blinnShader_Camera Position" {{parent.Camera1.world_matrix.3} {parent.Camera1.world_matrix.7} {parent.Camera1.world_matrix.11}}
  "blinnShader_Diffuse Multiplier" 1.415
  "blinnShader_Specular Power" 15.15
  "blinnShader_Specular Hardness" 8.5
  name BlinkScript8
  selected true
  xpos -186
  ypos 575
 }
set N191b24b0 [stack 0]
 Premult {
  name Premult1
  xpos -186
  ypos 718
 }
 Output {
  name Output1
  xpos -186
  ypos 785
 }
push $N191b24b0
 Viewer {
  colour_sample_bbox {-0.8265625238 -0.2890625 -0.8249999881 -0.287499994}
  samplepoints {{-0.8265625238 -0.2890625}
    }
  input_process false
  name Viewer1
  xpos -3
  ypos 589
 }
end_group
PostageStamp {
 name PostageStamp1
 xpos 513
 ypos 1240
 postage_stamp true
}
Group {
 inputs 0
 name Particle_Lights_Basic
 xpos -1958
 ypos 366
 addUserKnob {20 User}
 addUserKnob {26 info1 l "" +STARTLINE T "Particle Lights v1.1"}
 addUserKnob {26 info2 l "" +STARTLINE T "by Mads Hagbarth Lund"}
 addUserKnob {26 ""}
 addUserKnob {41 "blinnShader_Diffuse Multiplier" l "Diffuse Multiplier" T "BlinkScript8.blinnShader_Diffuse Multiplier"}
 addUserKnob {41 "blinnShader_Specular Power" l "Specular Power" T "BlinkScript8.blinnShader_Specular Power"}
 addUserKnob {41 "blinnShader_Specular Hardness" l "Specular Hardness" T "BlinkScript8.blinnShader_Specular Hardness"}
 addUserKnob {41 "blinnShader_Half Lambert" l "Half Lambert" T "BlinkScript8.blinnShader_Half Lambert"}
}
 StickyNote {
  inputs 0
  name StickyNote1
  label "A bug in the blink node means that the input size must be atleast 2x2. \nSo we fake this by adding 2 null particles."
  xpos -847
  ypos 354
 }
 Group {
  inputs 0
  name Light2
  xpos -679
  ypos 487
  addUserKnob {20 User}
  addUserKnob {41 color T Point.color}
  addUserKnob {41 intensity T Point.intensity}
  addUserKnob {41 translate T Point.translate}
 }
  StickyNote {
   inputs 0
   name StickyNote1
   label "Ensure that we can use axis nodes\nto modify the position of the light."
   xpos -183
   ypos -299
  }
  StickyNote {
   inputs 0
   name StickyNote2
   label "Dummy object to make it look like a regular light"
   xpos -188
   ypos -235
  }
  StickyNote {
   inputs 0
   name StickyNote4
   label "Link positions via the world matrix to get exact position"
   xpos -300
   ypos -55
  }
  StickyNote {
   inputs 0
   name StickyNote3
   label "Link RGB to color and Alpha to Intensity"
   xpos -300
   ypos -131
  }
  Constant {
   inputs 0
   color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
   format "1 1 0 0 1 1 1 hg_light"
   name Constant2
   xpos -399
   ypos -148
  }
  Sphere {
   display off
   render_mode off
   rows 1
   columns 1
   translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
   uniform_scale 0.022
   name Lightx
   xpos -399
   ypos -52
  }
push 0
  ParticleEmitter {
   inputs 2
   display off
   render_mode off
   start_frame -5
   emit_channels {b}
   emit_from bbox
   emit_order uniformly
   randomize_type "randomize outwards"
   rate 4
   lifetime 1
   velocity 0
   size 1
   size_channel rgba.alpha
   color_from_texture true
   name ParticleEmitter1
   xpos -399
   ypos 46
  }
  Output {
   name Output1
   xpos -399
   ypos 150
  }
  Input {
   inputs 0
   name Input1
   xpos -276
   ypos -296
  }
  Light {
   color {0 0 0}
   intensity 0
   depthmap_slope_bias 0.01
   name Point
   xpos -266
   ypos -216
  }
 end_group
 Group {
  inputs 0
  name Light1
  xpos -684
  ypos 428
  addUserKnob {20 User}
  addUserKnob {41 color T Point.color}
  addUserKnob {41 intensity T Point.intensity}
  addUserKnob {41 translate T Point.translate}
 }
  StickyNote {
   inputs 0
   name StickyNote1
   label "Ensure that we can use axis nodes\nto modify the position of the light."
   xpos -183
   ypos -299
  }
  StickyNote {
   inputs 0
   name StickyNote2
   label "Dummy object to make it look like a regular light"
   xpos -188
   ypos -235
  }
  StickyNote {
   inputs 0
   name StickyNote4
   label "Link positions via the world matrix to get exact position"
   xpos -300
   ypos -55
  }
  StickyNote {
   inputs 0
   name StickyNote3
   label "Link RGB to color and Alpha to Intensity"
   xpos -300
   ypos -131
  }
  Constant {
   inputs 0
   color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
   format "1 1 0 0 1 1 1 hg_light"
   name Constant2
   xpos -399
   ypos -148
  }
  Sphere {
   display off
   render_mode off
   rows 1
   columns 1
   translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
   uniform_scale 0.022
   name Lightx
   xpos -399
   ypos -52
  }
push 0
  ParticleEmitter {
   inputs 2
   display off
   render_mode off
   start_frame -5
   emit_channels {b}
   emit_from bbox
   emit_order uniformly
   randomize_type "randomize outwards"
   rate 4
   lifetime 1
   velocity 0
   size 1
   size_channel rgba.alpha
   color_from_texture true
   name ParticleEmitter1
   xpos -399
   ypos 46
  }
  Output {
   name Output1
   xpos -399
   ypos 150
  }
  Input {
   inputs 0
   name Input1
   xpos -276
   ypos -296
  }
  Light {
   color {0 0 0}
   intensity 0
   depthmap_slope_bias 0.01
   name Point
   xpos -266
   ypos -216
  }
 end_group
push 0
 Input {
  inputs 0
  name Particles
  xpos -452
  ypos 324
 }
 ParticleMerge {
  inputs 4
  name ParticleMerge1
  xpos -452
  ypos 428
 }
 ParticleToImage {
  pos hag_pos
  active hag_active.a
  name ParticleToImage1
  xpos -452
  ypos 511
 }
set N6e5914e0 [stack 0]
 Shuffle {
  in hag_pos
  name light_pos
  xpos -329
  ypos 511
 }
 Dot {
  name Dot2
  xpos -295
  ypos 559
 }
push $N6e5914e0
 Shuffle {
  in rgb
  in2 hag_active
  alpha red2
  name light_color
  xpos -452
  ypos 581
 }
 Input {
  inputs 0
  name Camera
  xpos -149
  ypos 282
  number 1
 }
 Camera2 {
  name Camera1
  xpos -136
  ypos 320
 }
 Dot {
  name Dot1
  xpos -112
  ypos 396
 }
 Input {
  inputs 0
  name Scene3D
  xpos -275
  ypos 323
  number 2
 }
push 0
 ScanlineRender {
  inputs 3
  max_tessellation 2
  motion_vectors_type distance
  output_shader_vectors true
  P_channel point
  N_channel normal
  name ScanlineRender2
  xpos -275
  ypos 393
 }
 Dot {
  name Dot10
  xpos -241
  ypos 421
 }
set N6e5933d0 [stack 0]
 Dot {
  name Dot3
  xpos -152
  ypos 421
 }
 Shuffle {
  in normal
  in2 rgba
  alpha alpha2
  name NormalSplit
  xpos -186
  ypos 472
 }
push $N6e5933d0
 Shuffle {
  in point
  in2 rgba
  alpha alpha2
  name PointPosSplit
  xpos -275
  ypos 472
 }
 BlinkScript {
  inputs 4
  ProgramGroup 1
  KernelDescription "1 \"blinnShader\" iterate pixelWise 4b6604ba5b4299095f03f9edf77da6dbf1f946c319dc7f6e6962ca67a375f9f8 5 \"pointPos\" Read Point \"normal\" Read Point \"light_color\" Read Random \"light_pos\" Read Random \"dst\" Write Point 5 \"Camera Position\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"Diffuse Multiplier\" Float 1 AACAPw== \"Specular Power\" Float 1 AAAgQQ== \"Specular Hardness\" Float 1 AADIQg== \"Half Lambert\" Bool 1 AQ=="
  kernelSource "kernel blinnShader : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> pointPos;  //the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> normal;  //the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> light_color;  //the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> light_pos;  //the input image\n\n  Image<eWrite> dst;  //the output image\n\n  param:\n    float3 cameraPosition;\n    float diffuseMultiplier;\n    float specularPower;\n    float specularHardness;\n    bool halfLambert;\n\n  local:\n    float3 lightDir;\n    float3 viewDir;\n\n  void define() \{\n    defineParam(halfLambert,\"Half Lambert\",bool(1));\n    defineParam(cameraPosition, \"Camera Position\", float3(1.0f,1.0f,1.0f));\n    defineParam(diffuseMultiplier,\"Diffuse Multiplier\",float(1.0f));\n    defineParam(specularPower,\"Specular Power\",float(10.0f));\n    defineParam(specularHardness,\"Specular Hardness\",float(100.0f));\n  \}\n\n  void init() \{\n  \}\n\n  void process() \{\n\n    SampleType(dst) sampleBase(0.0f);\n\n    float newVal = 0;\n    for(int j = 0; j < light_pos.bounds.y2; j++) \{\n      for(int i = 0; i < light_pos.bounds.x2; i++) \{\n        if (light_color(i,j).w == 1) \{        \n\n        lightDir = (float3(light_pos(i,j).x,light_pos(i,j).y,light_pos(i,j).z)-float3(pointPos(0),pointPos(1),pointPos(2)));\n        float distance = length(lightDir);\n        lightDir = normalize(lightDir);\n        distance = distance * distance;\n\n        viewDir = (cameraPosition-float3(pointPos(0),pointPos(1),pointPos(2)));\n        viewDir = normalize(viewDir);\n\n\n        //Calculating Diffuse\n        float NdotL = dot(float3(normal(0),normal(1),normal(2)),lightDir);\n        if (halfLambert) \{      \n           NdotL = NdotL * 0.5 + 0.5; //Added option for half lambert\n         \}\n        else\n        \{\n        NdotL = min(1.0f,max(0.0f,NdotL));\n        \}\n\n        float diffuse = NdotL * (light_pos(i,j).w*diffuseMultiplier) / distance;\n\n\n        //Calculating Specular\n        float3 H = normalize(lightDir+viewDir);\n        float NdotH = dot(float3(normal(0),normal(1),normal(2)),H);\n        float intensity = pow(NdotH,specularHardness);\n        float specular = intensity * specularPower / distance;\n\n\n        SampleType(dst) sample(0.0f);\n        sample.x = max(0.0f,(diffuse+specular) * light_color(i,j).x);\n        sample.y =  max(0.0f,(diffuse+specular) * light_color(i,j).y);\n        sample.z =  max(0.0f, (diffuse+specular) * light_color(i,j).z);\n        sampleBase += sample;\n        \}\n      \}\n    \}\n\n    dst() = sampleBase+float4(0,0,0,pointPos(3)); //Reaplying Alpha\n   \}\n\};"
  useGPUIfAvailable false
  vectorize false
  rebuild ""
  "blinnShader_Camera Position" {{parent.Camera1.world_matrix.3} {parent.Camera1.world_matrix.7} {parent.Camera1.world_matrix.11}}
  "blinnShader_Diffuse Multiplier" 4
  "blinnShader_Specular Power" 0.45
  "blinnShader_Specular Hardness" 200
  "blinnShader_Half Lambert" false
  name BlinkScript8
  xpos -186
  ypos 575
 }
set N6e8fb590 [stack 0]
 Premult {
  name Premult1
  xpos -186
  ypos 718
 }
 Output {
  name Output1
  xpos -186
  ypos 785
 }
push $N6e8fb590
 Viewer {
  colour_sample_bbox {-0.8265625238 -0.2890625 -0.8249999881 -0.287499994}
  samplepoints {{-0.8265625238 -0.2890625}
    }
  input_process false
  name Viewer1
  xpos -3
  ypos 589
 }
end_group
