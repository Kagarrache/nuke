#! /s/apps/packages/cg/nuke/9.0.v8/platform-linux/libnuke-9.0.8.so -nx
version 9.0 v8
Group {
name PP_Mask_hub
help "- first pick color on Ppass to select center of mask\n\n- For fine details on tiny distances, prefer 32b float renders to avoid banding.\n- To perform better antialiasing than by Matrix antialias, render pPass with double master resolution. The output is downscaled to root.format resolution.\n\n- If the the result is completly black, try raising spread and multiplier values.\n- If the the result is completly white, try lowering spread and multiplier values.\n - You can copy the rotation of the camera in the rotate channels to line up the orientations or tweak it to your needs...\n\n- falloff issue is now fixed, it's bidirectional.\n- This gizmo uses RotateNormals gizmo from Hakan Blomdahl. Thanks to him\n- Thanks to Nathan Dunsworth who made me discover pPass power !\n"
tile_color 0xff00ff
addUserKnob {20 PositionPass_maskGenerator_hub t "If the the result is completly black try to raise spread and multiplier values.\nIf the the result is completly white try to lower spread and multiplier values."}
addUserKnob {80 Switch1_disable l "VIEW ON PP" +STARTLINE}
Switch1_disable true
addUserKnob {19 PickColor_add l "pick color" R -1 1}
PickColor_add {-2.478515625 25.640625 5.33984375 1}
addUserKnob {6 PickColor_add_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 Put_Alpha_In_RGB l "Copy Alpha In RGB" +STARTLINE}
Put_Alpha_In_RGB true
addUserKnob {6 invert +STARTLINE}
addUserKnob {19 OutGain_white l "    Out Gain" -STARTLINE R 0 10}
OutGain_white 1
addUserKnob {6 OutGain_white_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {20 setup n 1}
addUserKnob {6 premult -STARTLINE}
addUserKnob {80 ReformatOUT_disable l " " +STARTLINE}
addUserKnob {41 format l "output format" -STARTLINE T ReformatOUT.format}
addUserKnob {41 filter l "" -STARTLINE T ReformatOUT.filter}
addUserKnob {6 AntiAlias l "MatrixAntiAlias (when no double size Ppass)" +STARTLINE}
addUserKnob {80 M_dropZeros_disable l "drop Zeros" +STARTLINE}
M_dropZeros_disable true
addUserKnob {20 endGroup_2 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {6 pos_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {41 rotate T AxisInternRot.rotate}
addUserKnob {18 pos l offset R -2 -2}
pos {0 0 0}
addUserKnob {6 pos_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {7 spread_uniform l spread R 0 2}
spread_uniform 0.5
addUserKnob {7 Multiplier R 0.1 50}
Multiplier 1
addUserKnob {7 falloff R 0 2}
falloff 1
addUserKnob {26 Falloff_tip l "" +STARTLINE T "(Ratio between Sphere and Cube)"}
addUserKnob {20 non_unif_GROUP l non_uniform n 1}
addUserKnob {7 spread_x R 0.1 1}
spread_x 0.1
addUserKnob {7 falloff_x R 0 2}
falloff_x 1
addUserKnob {7 spread_y R 0.1 1}
spread_y 0.1
addUserKnob {7 falloff_y R 0 2}
falloff_y 1
addUserKnob {7 spread_z R 0.1 1}
spread_z 0.1
addUserKnob {7 falloff_z R 0 2}
falloff_z 1
addUserKnob {20 endGroup n -1}
addUserKnob {18 outFade}
outFade {0 0 0}
addUserKnob {6 outFade_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {22 infos T "import webbrowser \nwebbrowser.open(\"http://www.nukepedia.com/gizmos/keyer/ppass_mask_hub\")" +STARTLINE}
addUserKnob {26 howto l "" -STARTLINE T "  ( HOWTO in \"?\" gizmo button )"}
}
Constant {
inputs 0
channels rgb
color {-3.060546875 27.96875 5.109375 1}
format "1280 720 0 0 1280 720 1 HDTV"
name Constant1
xpos 672
ypos -112
}
Input {
inputs 0
name Input1
label "\[value number]"
xpos 349
ypos -234
}
Shuffle {
name ShuffleIN
xpos 349
ypos -165
}
set Nae75bb80 [stack 0]
Dot {
name Dot8
xpos 254
ypos -161
}
Grade {
channels rgba
white 0
add {{parent.PickColor_add.r} {parent.PickColor_add.g} {parent.PickColor_add.b} {parent.PickColor_add.a}}
black_clamp false
name PickColor
selected true
xpos 220
ypos -143
}
Expression {
expr0 -r
expr1 -g
expr2 -b
name Expression3
xpos 220
ypos -89
}
push $Nae75bb80
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name PLUS
xpos 349
ypos -89
}
set Nae76a7f0 [stack 0]
push 0
push $Nae75bb80
Dot {
name Dot2
xpos 590
ypos -161
}
Dot {
name Dot1
xpos 590
ypos 309
}
set Nae77e700 [stack 0]
push $Nae77e700
push $Nae76a7f0
Dot {
name Dot4
xpos 383
ypos 114
}
Group {
name RotateNormals
help "This will rotate Normal-data using rotation matrixes.\nhttp://en.wikipedia.org/wiki/Rotation_matrix\n\nYou enable Normal-data in the ScanlineRender-node, create a new layer for this.\n\nTip 1:\n Link the rotation knob to the Nuke camera, revert the camera order and then either invert the matrixes or negate the angles.\nThis will convert the Normal data from World Space to Camera Space. I guess. I am no expert on the subject.\n\n\nTip 2:\nPut these in your init.tcl to always render out the normals:\n\nadd_layer \{P P.x P.y P.z\}\nknob_default ScanlineRender.P_channel P\nadd_layer \{N N.x N.y N.z\}\nknob_default ScanlineRender.N_channel N\nknob_default ScanlineRender.output_shader_vectors true\n\nNote:\n In Nuke4.6 and earlier, the Normals is multiplied with the Z, so you need to divide them first. Use Channel Merge for this.\n"
xpos 231
ypos 110
addUserKnob {20 "" l Parameters}
addUserKnob {26 "" l Rotation}
addUserKnob {41 negx t "Multiply x-angle with -1.\nGood if you have linked the rotation data to something and want to reverse it.\n" T RotData.negx}
addUserKnob {41 negy t "Multiply y-angle with -1.\nGood if you have linked the rotation data to something and want to reverse it.\n" T RotData.negy}
addUserKnob {41 negz t "Multiply z-angle with -1.\nGood if you have linked the rotation data to something and want to reverse it.\n" T RotData.negz}
addUserKnob {41 rotate T RotData.rotate}
addUserKnob {26 ""}
addUserKnob {4 rotationorder M {XYZ XZY YXZ YZX ZXY ZYX}}
rotationorder ZXY
addUserKnob {6 revertorder l "Revert Order" t "Quick order reversal." -STARTLINE}
addUserKnob {26 ""}
addUserKnob {41 invertxmatrix t "Inverts the X rotation matrix. (Checks the invert knob on the ColorMatrix Node)\n" T RotData.invertxmatrix}
addUserKnob {41 invertymatrix t "Inverts the Y rotation matrix. (Checks the invert knob on the ColorMatrix Node)\n" T RotData.invertymatrix}
addUserKnob {41 invertzmatrix t "Inverts the Z rotation matrix. (Checks the invert knob on the ColorMatrix Node)\n" T RotData.invertzmatrix}
addUserKnob {26 "" l "Source Channels"}
addUserKnob {41 from0 l "Normal X" T CopyFrom.from0}
addUserKnob {41 from1 l "Normal Y" T CopyFrom.from1}
addUserKnob {41 from2 l "Normal Z" T CopyFrom.from2}
addUserKnob {26 "" l "Destination Channels"}
addUserKnob {41 to0 l X T CopyBack.to0}
addUserKnob {41 to1 l Y T CopyBack.to1}
addUserKnob {41 to2 l Z T CopyBack.to2}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x7171c600
label "Reverted Order"
note_font_size 32
xpos 650
ypos 4
bdwidth 1030
bdheight 354
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0x8e8e3800
label "Normal Order"
note_font_size 32
xpos -581
ypos 22
bdwidth 1001
bdheight 355
}
NoOp {
inputs 0
name RotData
xpos 1170
ypos -370
addUserKnob {20 "" l User}
addUserKnob {6 invertxmatrix -STARTLINE}
addUserKnob {6 invertymatrix -STARTLINE}
addUserKnob {6 invertzmatrix -STARTLINE}
addUserKnob {26 ""}
addUserKnob {6 negx -STARTLINE}
addUserKnob {6 negy -STARTLINE}
addUserKnob {6 negz -STARTLINE}
addUserKnob {13 rotate}
rotate {{parent.parent.AxisInternRot.rotate} {parent.parent.AxisInternRot.rotate} {parent.parent.AxisInternRot.rotate}}
addUserKnob {26 ""}
addUserKnob {1 alphaexpr}
alphaexpr (negy?-1:1)*rotate.y/360.0*(2*PI)
addUserKnob {1 betaexpr}
betaexpr (negz?-1:1)*rotate.z/360.0*(2*PI)
addUserKnob {1 gammaexpr}
gammaexpr (negx?-1:1)*rotate.x/360.0*(2*PI)
addUserKnob {26 ""}
addUserKnob {7 alpha}
alpha {{"\[knob alphaexpr]" i}}
addUserKnob {7 beta}
beta {{"\[knob betaexpr]" i}}
addUserKnob {7 gamma}
gamma {{"\[knob gammaexpr]" i}}
}
Input {
inputs 0
name Input1
xpos 1830
ypos -610
}
Dot {
name Dot2
xpos 1863
ypos -487
}
set Nae7aba20 [stack 0]
Dot {
name Dot3
xpos 653
ypos -477
}
set Nae7b0480 [stack 0]
Dot {
name Dot1
xpos 433
ypos -477
}
push $Nae7b0480
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
from1 rgba.green
to1 rgba.green
from2 rgba.blue
to2 rgba.blue
name CopyFrom
xpos 400
ypos -367
}
Dot {
name Dot4
xpos 433
ypos -175
}
set Nae7c7670 [stack 0]
ColorMatrix {
matrix {
    {1 0 0}
    {0 {"cos( \[value RotData.gamma] )" i} {"-1 * sin( \[value RotData.gamma] )" i}}
    {0 {"sin( \[value RotData.gamma] )" i} {"cos( \[value RotData.gamma] )" i}}
  }
invert {{"\[value RotData.invertxmatrix]" i}}
name ColorMatrix10
label "ROLL  X\ngamma"
xpos 1500
ypos 96
}
set Cae7cc7c0 [stack 0]
ColorMatrix {
matrix {
    {{"cos( \[value RotData.alpha] )" i} 0 {"sin( \[value RotData.alpha] )" i}}
    {0 1 0}
    {{"-1 * sin( \[value RotData.alpha] )" i} 0 {"cos( \[value RotData.alpha] )" i}}
  }
invert {{"\[value RotData.invertymatrix]" i}}
name ColorMatrix11
label "Pitch  Y\nalpha"
xpos 1500
ypos 150
}
set Cae7d9420 [stack 0]
ColorMatrix {
matrix {
    {{"cos( \[value RotData.beta] )" i} {"-1 * sin( \[value RotData.beta] )" i} 0}
    {{"sin( \[value RotData.beta] )" i} {"cos( \[value RotData.beta] )" i} 0}
    {0 0 1}
  }
invert {{"\[value RotData.invertzmatrix]"}}
name ColorMatrix12
label "Yaw  Z\nbeta"
xpos 1500
ypos 204
}
set Cae7e5d00 [stack 0]
push $Nae7c7670
clone $Cae7d9420 {
xpos 1360
ypos 96
selected false
}
clone $Cae7cc7c0 {
xpos 1360
ypos 150
selected false
}
clone $Cae7e5d00 {
xpos 1360
ypos 204
selected false
}
push $Nae7c7670
clone $Cae7e5d00 {
xpos 1210
ypos 102
selected false
}
clone $Cae7cc7c0 {
xpos 1210
ypos 156
selected false
}
clone $Cae7d9420 {
xpos 1210
ypos 210
selected false
}
push $Nae7c7670
clone $Cae7cc7c0 {
xpos 1047
ypos 108
selected false
}
clone $Cae7e5d00 {
xpos 1047
ypos 174
selected false
}
clone $Cae7d9420 {
xpos 1047
ypos 228
selected false
}
push $Nae7c7670
clone $Cae7d9420 {
xpos 890
ypos 108
selected false
}
clone $Cae7e5d00 {
xpos 890
ypos 167
selected false
}
clone $Cae7cc7c0 {
xpos 890
ypos 228
selected false
}
push $Nae7c7670
clone $Cae7e5d00 {
xpos 730
ypos 120
selected false
}
clone $Cae7d9420 {
xpos 730
ypos 174
selected false
}
clone $Cae7cc7c0 {
xpos 730
ypos 228
selected false
}
Switch {
inputs 6
which {{rotationorder}}
name Switch2
xpos 950
ypos 446
}
push $Nae7c7670
clone $Cae7e5d00 {
xpos 240
ypos 102
selected false
}
clone $Cae7d9420 {
xpos 240
ypos 156
selected false
}
clone $Cae7cc7c0 {
xpos 240
ypos 210
selected false
}
push $Nae7c7670
clone $Cae7e5d00 {
xpos 100
ypos 102
selected false
}
clone $Cae7cc7c0 {
xpos 100
ypos 156
selected false
}
clone $Cae7d9420 {
xpos 100
ypos 210
selected false
}
push $Nae7c7670
clone $Cae7d9420 {
xpos -50
ypos 108
selected false
}
clone $Cae7cc7c0 {
xpos -50
ypos 162
selected false
}
clone $Cae7e5d00 {
xpos -50
ypos 216
selected false
}
push $Nae7c7670
clone $Cae7d9420 {
xpos -213
ypos 114
selected false
}
clone $Cae7e5d00 {
xpos -213
ypos 180
selected false
}
clone $Cae7cc7c0 {
xpos -213
ypos 234
selected false
}
push $Nae7c7670
clone $Cae7cc7c0 {
xpos -370
ypos 114
selected false
}
clone $Cae7e5d00 {
xpos -370
ypos 173
selected false
}
clone $Cae7d9420 {
xpos -370
ypos 247
selected false
}
push $Nae7c7670
clone $Cae7cc7c0 {
xpos -501
ypos 102
selected false
}
clone $Cae7d9420 {
xpos -501
ypos 171
selected false
}
clone $Cae7e5d00 {
xpos -501
ypos 234
selected false
}
Switch {
inputs 6
which {{rotationorder}}
name Switch1
xpos -75
ypos 422
}
Switch {
inputs 2
which {{revertorder}}
name Switch3
xpos 510
ypos 542
}
Dot {
name Dot5
xpos 543
ypos 665
}
push $Nae7aba20
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
from1 rgba.green
to1 rgba.green
from2 rgba.blue
to2 rgba.blue
name CopyBack
xpos 1830
ypos 641
}
Output {
name Output1
xpos 1830
ypos 758
}
end_group
Grade {
add {{-parent.pos.r i} {-parent.pos.g i x483 0} {-parent.pos.b i} 1}
black_clamp false
name Grade_pos
xpos 92
ypos 110
}
Grade {
multiply {{1/parent.Multiplier*10 i}}
black_clamp false
name MainMultiplier
xpos -16
ypos 110
}
Grade {
multiply {{(1/parent.spread_uniform+.1)/10}}
black_clamp false
name GradeSpreadUnif
xpos -155
ypos 110
}
Grade {
channels {rgba.red -rgba.green -rgba.blue none}
multiply {{(1/parent.spread_x+.1)/10 i}}
black_clamp false
name Grade_SpreadX
xpos -155
ypos 218
}
Grade {
channels {-rgba.red rgba.green -rgba.blue none}
multiply {{(1/parent.spread_y+.1)/10 i}}
black_clamp false
name Grade_SpreadY
xpos -155
ypos 264
}
Grade {
channels {-rgba.red -rgba.green rgba.blue none}
multiply {{(1/parent.spread_z+.1)/10 i}}
black_clamp false
name Grade_SpreadZ
xpos -155
ypos 310
}
ColorLookup {
lut {master {curve C x-10 0 x0 1 0}
  red {}
  green {}
  blue {}
  alpha {}}
name GaussCentered
xpos -155
ypos 445
}
Grade {
gamma {{parent.falloff i}}
black_clamp false
name GradeFalloffUnif
xpos 157
ypos 445
}
Grade {
channels {rgba.red -rgba.green -rgba.blue none}
gamma {{parent.falloff_x}}
black_clamp false
name Grade_FalloffX
xpos 157
ypos 308
}
Grade {
channels {-rgba.red rgba.green -rgba.blue none}
gamma {{parent.falloff_y}}
black_clamp false
name Grade_FalloffY
xpos 157
ypos 262
}
Grade {
channels {-rgba.red -rgba.green rgba.blue none}
gamma {{parent.falloff_z}}
black_clamp false
name Grade_FalloffZ
xpos 157
ypos 216
}
Clamp {
channels rgba
name Clamp1
xpos 421
ypos 216
}
Expression {
channel0 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
expr0 r*g*b
name Expression1
xpos 421
ypos 242
}
ShuffleCopy {
inputs 2
in2 alpha
alpha alpha2
black red
white green
red2 blue
out alpha
out2 rgb
name ShuffleCopy1
xpos 421
ypos 305
}
set Naed3f5b0 [stack 0]
push $Nae77e700
push $Nae77e700
Expression {
channel0 rgba
expr0 r!=0&&g!=0&&b!=0?1:0
name expr
xpos 556
ypos 372
}
push $Nae77e700
push $Naed3f5b0
Multiply {
inputs 1+1
channels rgba
value 0
invert_mask true
name Multiply1
xpos 421
ypos 346
disable {{!premult i}}
}
Merge2 {
inputs 2
operation multiply
name M_dropZeros
xpos 421
ypos 372
disable {{!parent.M_dropZeros_disable}}
}
Grade {
channels alpha
white {{parent.OutGain_white.r} {parent.OutGain_white.g} {parent.OutGain_white.b} {parent.OutGain_white.a}}
name OutGain
xpos 421
ypos 402
}
Invert {
channels rgba
name Invert1
xpos 421
ypos 446
disable {{!invert i}}
}
Matrix {
channels rgba
matrix {
    {1 2 1}
    {2 10 2}
    {1 2 1}
  }
normalize true
name Matrix1
xpos 421
ypos 487
disable {{1-AntiAlias}}
}
Dot {
name Dot3
xpos 455
ypos 524
}
set Naeda07a0 [stack 0]
push $Naeda07a0
ShuffleCopy {
inputs 2
in alpha
alpha alpha2
black red
out2 alpha
name ShuffleCopyOUT
xpos 556
ypos 521
}
Dot {
name Dot7
xpos 590
ypos 616
}
set Naedb3c30 [stack 0]
Expression {
channel0 rgba
expr0 a
name AtoRGB1
xpos 716
ypos 612
}
set Naedb88a0 [stack 0]
Grade {
channels rgba
whitepoint 0.008
white_clamp true
name Grade8
xpos 716
ypos 677
}
set Naedc6910 [stack 0]
push $Naedb88a0
push $Nae77e700
Dot {
name Dot5
xpos 858
ypos 309
}
set Naedd72c0 [stack 0]
Merge2 {
inputs 2+1
operation multiply
name Min
xpos 931
ypos 677
}
set Naeddbd20 [stack 0]
push $Naedc6910
push $Naedb88a0
push $Naedd72c0
Merge2 {
inputs 2+1
operation max
name M_6
xpos 824
ypos 677
}
set Naedeb1a0 [stack 0]
Viewer {
inputs 7
frame_range 1001-1001
fps 25
input_number 1
colour_sample_bbox {-0.1666666716 0.1895833313 -0.165625006 0.190624997}
viewerProcess "None (default)"
input_process false
name Viewer1
xpos -110
ypos -96
}
push $Naedc6910
push $Naeddbd20
push $Naedeb1a0
Merge2 {
inputs 2+1
operation difference
name M_
xpos 824
ypos 730
}
Dot {
name Dot6
xpos 858
ypos 756
}
push $Naedb3c30
Expression {
channel0 rgba
expr0 a
name AtoRGB
xpos 556
ypos 677
disable {{1-Put_Alpha_In_RGB}}
}
Switch {
inputs 2
which 1
name Switch1
label "\[value which]"
xpos 556
ypos 746
disable {{!parent.Switch1_disable}}
}
Reformat {
name ReformatOUT
xpos 556
ypos 813
disable {{!parent.ReformatOUT_disable}}
}
Output {
name Output1
xpos 556
ypos 873
}
Axis2 {
inputs 0
name AxisInternRot
xpos 244
ypos 31
}
end_group
